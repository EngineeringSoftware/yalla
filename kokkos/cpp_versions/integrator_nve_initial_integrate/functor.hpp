// ******* AUTOMATICALLY GENERATED BY PyKokkos *******
#ifndef PK_FUNCTOR_INITIAL_INTEGRATE_HPP
#define PK_FUNCTOR_INITIAL_INTEGRATE_HPP

struct pk_functor_initial_integrate {
  struct initial_integrate_tag {};
  double dtf;
  double dtv;
  Kokkos::View<double **, Kokkos::LayoutRight, Kokkos::HostSpace,
               Kokkos::Experimental::EmptyViewHooks>
      x;
  Kokkos::View<double **, Kokkos::LayoutRight, Kokkos::HostSpace,
               Kokkos::Experimental::EmptyViewHooks>
      v;
  Kokkos::View<double **, Kokkos::LayoutRight, Kokkos::HostSpace,
               Kokkos::Experimental::EmptyViewHooks>
      f;
  Kokkos::View<int *, Kokkos::LayoutRight, Kokkos::HostSpace,
               Kokkos::Experimental::EmptyViewHooks>
      type;
  Kokkos::View<double *, Kokkos::LayoutRight, Kokkos::HostSpace,
               Kokkos::Experimental::EmptyViewHooks>
      mass;
  pk_functor_initial_integrate(
      double dtf, double dtv,
      Kokkos::View<double **, Kokkos::LayoutRight, Kokkos::HostSpace,
                   Kokkos::Experimental::EmptyViewHooks>
          x,
      Kokkos::View<double **, Kokkos::LayoutRight, Kokkos::HostSpace,
                   Kokkos::Experimental::EmptyViewHooks>
          v,
      Kokkos::View<double **, Kokkos::LayoutRight, Kokkos::HostSpace,
                   Kokkos::Experimental::EmptyViewHooks>
          f,
      Kokkos::View<int *, Kokkos::LayoutRight, Kokkos::HostSpace,
                   Kokkos::Experimental::EmptyViewHooks>
          type,
      Kokkos::View<double *, Kokkos::LayoutRight, Kokkos::HostSpace,
                   Kokkos::Experimental::EmptyViewHooks>
          mass) :     dtf(dtf), 
    dtv(dtv), 
    x(x), 
    v(v), 
    f(f), 
    type(type), 
    mass(mass) {
  };
  void operator()(const initial_integrate_tag &, int i) const;
};

#endif